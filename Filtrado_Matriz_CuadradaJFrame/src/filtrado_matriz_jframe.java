
import java.awt.Color;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cbr
 */
public class filtrado_matriz_jframe extends javax.swing.JFrame {

    /**
     * Creates new form filtrado_matriz_jframe
     */
    private int [][] matriz;
    
    public filtrado_matriz_jframe() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("MatrixFilter");
        int max = Integer.parseInt(max_textfield.getText());
        int min = Integer.parseInt(min_textfield.getText());
        matriz = generaMatriz(Integer.parseInt(dimension_textfield.getText()) , max,min);
        umbral_slider.setValue(min+((max-min)/2));
        escribeMatriz(matriz_textArea, matriz, umbral_slider.getValue());
    }
    
    public static int [][] generaMatriz(int dimension, int max, int min){
        int [][] matriz;
        matriz = new int[dimension][dimension];
        Random r =new Random();
        
        for(int i=0; i<dimension;i++){
            for (int j = 0; j < dimension; j++) {
                matriz [i][j]=r.nextInt((max - min) +1) + min;
                
            }
        }
        return matriz;
    }
    
    public static void escribeMatriz(JTextArea matriz_textArea , int[][] matriz, int umbral){
        matriz_textArea.setText(null);
        for(int i = 0; i < matriz.length; i++){
            for(int j = 0; j < matriz.length; j++){
                if(matriz[i][j] > umbral)
                    matriz_textArea.append(matriz[i][j] + "\t");
                else
                    matriz_textArea.append("-\t");
            }
            matriz_textArea.append("\n");
        }
    }
    
    private static boolean isNumeric(String cadena){
	try {
		Integer.parseInt(cadena);
		return true;
	} catch (NumberFormatException nfe){
		return false;
	}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dimension_label = new javax.swing.JLabel();
        min_label = new javax.swing.JLabel();
        max_label = new javax.swing.JLabel();
        umbral_label = new javax.swing.JLabel();
        dimension_textfield = new javax.swing.JTextField();
        min_textfield = new javax.swing.JTextField();
        max_textfield = new javax.swing.JTextField();
        umbral_slider = new javax.swing.JSlider();
        umbralVal_label = new javax.swing.JLabel();
        ERROR_label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        matriz_textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAutoscrolls(true);

        dimension_label.setText("Dimensión Matriz Cuadrada:");

        min_label.setText("Valor Mínimo Matriz:");

        max_label.setText("Valor Máximo Matriz:");

        umbral_label.setText("Umbral:");

        dimension_textfield.setText("7");
        dimension_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dimension_textfieldKeyReleased(evt);
            }
        });

        min_textfield.setText("50");
        min_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                min_textfieldKeyReleased(evt);
            }
        });

        max_textfield.setText("120");
        max_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                max_textfieldKeyReleased(evt);
            }
        });

        umbral_slider.setMajorTickSpacing(5);
        umbral_slider.setMaximum(120);
        umbral_slider.setMinimum(50);
        umbral_slider.setMinorTickSpacing(1);
        umbral_slider.setPaintLabels(true);
        umbral_slider.setPaintTicks(true);
        umbral_slider.setToolTipText("");
        umbral_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                umbral_sliderStateChanged(evt);
            }
        });

        jLabel1.setText("ATC & CBR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(min_label)
                    .addComponent(dimension_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(min_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(max_label)
                        .addGap(70, 70, 70)
                        .addComponent(max_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dimension_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(ERROR_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(umbral_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(umbral_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(umbralVal_label, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(264, 264, 264))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dimension_label)
                            .addComponent(dimension_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ERROR_label)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(min_label)
                    .addComponent(max_label)
                    .addComponent(min_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(max_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(umbralVal_label, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(umbral_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(umbral_label))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        matriz_textArea.setColumns(20);
        matriz_textArea.setRows(5);
        jScrollPane1.setViewportView(matriz_textArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void umbral_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_umbral_sliderStateChanged

        if (matriz != null){
            if(((Integer.parseInt(max_textfield.getText())-(Integer.parseInt(min_textfield.getText()))>100))){
                umbralVal_label.setText("Valor de umbral: " + umbral_slider.getValue());
            }
            escribeMatriz(matriz_textArea, matriz, umbral_slider.getValue());
        }
    }//GEN-LAST:event_umbral_sliderStateChanged

    private void dimension_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dimension_textfieldKeyReleased

        if(isNumeric(min_textfield.getText()) && isNumeric(max_textfield.getText()) && isNumeric(dimension_textfield.getText()) && Integer.parseInt(dimension_textfield.getText()) < 11 ){
            ERROR_label.setText("");
            ERROR_label.setForeground(Color.white);
            int max = Integer.parseInt(max_textfield.getText());
            int min = Integer.parseInt(min_textfield.getText());
            umbral_slider.setValue(min+((max-min)/2));
            matriz = generaMatriz(Integer.parseInt(dimension_textfield.getText()) , max , min);
            escribeMatriz(matriz_textArea, matriz, umbral_slider.getValue());
        } else {
            ERROR_label.setText("ERROR:Revise los datos introducidos");
            ERROR_label.setForeground(Color.red);
        }
    }//GEN-LAST:event_dimension_textfieldKeyReleased

    private void min_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_min_textfieldKeyReleased

        if(isNumeric(min_textfield.getText()) && isNumeric(max_textfield.getText()) && isNumeric(dimension_textfield.getText()) && Integer.parseInt(min_textfield.getText()) < Integer.parseInt(max_textfield.getText())){
            ERROR_label.setText("");
            ERROR_label.setForeground(Color.white);
            int max = Integer.parseInt(max_textfield.getText());
            int min = Integer.parseInt(min_textfield.getText());
            umbral_slider.setMinimum(min);
            umbral_slider.setMaximum(max);
            umbral_slider.setValue(min+((max-min)/2));
            if(max-min > 100){
                umbralVal_label.setText("Valor de umbral: " + umbral_slider.getValue());
                umbral_slider.setPaintLabels(false);
                umbral_slider.setMajorTickSpacing(0);
                umbral_slider.setMinorTickSpacing(1);
                umbral_slider.setPaintTicks(false);
            }else{
                umbralVal_label.setText("");
                umbral_slider.setPaintLabels(true);
                umbral_slider.setMajorTickSpacing(5);
                umbral_slider.setMinorTickSpacing(1);
                umbral_slider.setPaintTicks(true);
            }
            matriz = generaMatriz(Integer.parseInt(dimension_textfield.getText()) ,max,min);
            escribeMatriz(matriz_textArea, matriz, umbral_slider.getValue());
        } else {
            ERROR_label.setText("ERROR:Revise los datos introducidos");
            ERROR_label.setForeground(Color.red);
        }
    }//GEN-LAST:event_min_textfieldKeyReleased
    
    
    
    private void max_textfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_max_textfieldKeyReleased

        if(isNumeric(min_textfield.getText()) && isNumeric(max_textfield.getText()) && isNumeric(dimension_textfield.getText()) && Integer.parseInt(min_textfield.getText()) < Integer.parseInt(max_textfield.getText())){
            ERROR_label.setText("");
            ERROR_label.setForeground(Color.white);
            int max = Integer.parseInt(max_textfield.getText());
            int min = Integer.parseInt(min_textfield.getText());
            umbral_slider.setMaximum(max);
            umbral_slider.setMinimum(min);
            umbral_slider.setValue(min+((max-min)/2));
            if(max-min > 100){
                umbralVal_label.setText("Valor de umbral: " + umbral_slider.getValue());
                umbral_slider.setPaintLabels(false);
                umbral_slider.setMajorTickSpacing(0);
                umbral_slider.setMinorTickSpacing(1);
                umbral_slider.setPaintTicks(false);
            }else{
                umbralVal_label.setText("");
                umbral_slider.setPaintLabels(true);
                umbral_slider.setMajorTickSpacing(5);
                umbral_slider.setMinorTickSpacing(1);
                umbral_slider.setPaintTicks(true);
            }
            matriz = generaMatriz(Integer.parseInt(dimension_textfield.getText()) , max, min);
            escribeMatriz(matriz_textArea, matriz, umbral_slider.getValue());
        } else {
            ERROR_label.setText("ERROR:Revise los datos introducidos");
            ERROR_label.setForeground(Color.red);
        }
    }//GEN-LAST:event_max_textfieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(filtrado_matriz_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(filtrado_matriz_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(filtrado_matriz_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(filtrado_matriz_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new filtrado_matriz_jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ERROR_label;
    private javax.swing.JLabel dimension_label;
    private javax.swing.JTextField dimension_textfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea matriz_textArea;
    private javax.swing.JLabel max_label;
    private javax.swing.JTextField max_textfield;
    private javax.swing.JLabel min_label;
    private javax.swing.JTextField min_textfield;
    private javax.swing.JLabel umbralVal_label;
    private javax.swing.JLabel umbral_label;
    private javax.swing.JSlider umbral_slider;
    // End of variables declaration//GEN-END:variables
}
